---

- name: Prerequisites
  apt: name=python-mysqldb cache_valid_time=3600 state=present
  become: yes

- name: Add apt-key
  apt_key: keyserver=keyserver.ubuntu.com id=0xcbcb082a1bb943db
  become: yes

- name: Add repository
  apt_repository: repo="deb [arch=amd64,i386] http://lon1.mirrors.digitalocean.com/mariadb/repo/10.1/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} main" state=present
  become: yes

- name: Add repository (src)
  apt_repository: repo="deb-src http://lon1.mirrors.digitalocean.com/mariadb/repo/10.1/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} main" state=present
  become: yes

- name: Install MariaDB
  apt: name="{{ item }}" state=present
  with_items:
    - mariadb-server
    - libmariadbclient-dev
  become: yes

# todo: create .my.cnf if it does not exist (e.g. assume first installation?) with user=root and empty password

- name: Create admin user
  mysql_user: name="{{ mysql_user }}" password="{{ mysql_password }}" host="%" priv="*.*:ALL,GRANT" state=present

- name: Create local my.cnf
  template: src=my.cnf.j2 dest=~/.my.cnf mode=0600

- name: Get current hostname
  command: hostname
  register: current_hostname

- name: Delete insecure users
  mysql_user: name=root host="{{ item }}" state=absent
  with_items:
    - "{{ current_hostname.stdout | trim }}"
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1
    - localhost

- name: Set default charsets to utf8mb4
  lineinfile: dest=/etc/mysql/conf.d/mariadb.cnf regexp="^#?{{ item }}" line="{{ item }} = {{ mysql_charset }}"
  with_items:
  - default-character-set
  - character-set-server
  - character_set_server
  notify: restart_tokudb
  become: yes

- name: Set default collates to utf8mb4_unicode_ci
  lineinfile: dest=/etc/mysql/conf.d/mariadb.cnf regexp="^#?{{ item }}" line="{{ item }} = {{ mysql_charset }}_unicode_ci"
  with_items:
  - collation-server
  - collation_server
  notify: restart_tokudb
  become: yes

- name: Enable TokuDB
  lineinfile: dest=/etc/mysql/conf.d/tokudb.cnf regexp="^#?plugin-load-add" line="plugin-load-add=ha_tokudb.so"
  notify: restart_tokudb
  become: yes

- name: Set DirectIO (TokuDB)
  lineinfile: dest=/etc/mysql/conf.d/tokudb.cnf regexp="^#?tokudb_directio" line="tokudb_directio=1"
  notify: restart_tokudb
  become: yes

- name: Set Compression (TokuDB)
  lineinfile: dest=/etc/mysql/conf.d/tokudb.cnf regexp="^#?tokudb_row_format" line="tokudb_row_format=tokudb_lzma"
  notify: restart_tokudb
  become: yes
  
- name: Set Cache Size (TokuDB)
  lineinfile: dest=/etc/mysql/conf.d/tokudb.cnf regexp="^#?tokudb_cache_size" line="tokudb_cache_size={{ mysql_tokudb_cache_size }}"
  notify: restart_tokudb
  become: yes

- name: Add tokudbfy script
  copy: src=tokudbfy.sh dest=/usr/local/bin/tokudbfy mode="a+x"
  become: yes

- name: Add custom.cnf
  template: src=custom.cnf.j2 dest=/etc/mysql/conf.d/custom.cnf mode=0644
  notify: restart_tokudb
  become: yes

- name: Delete all innodb settings
  lineinfile: dest=/etc/mysql/my.cnf state=absent regexp="^innodb_"
  notify: restart_tokudb
  become: yes

- name: Disable innodb
  copy: src=disable_innodb.cnf dest=/etc/mysql/conf.d/disable_innodb.cnf mode=0644
  notify: restart_tokudb
  become: yes

- name: Delete InnoDB specific tables
  command: "mysql mysql -e 'DROP TABLE IF EXISTS {{ item }};'"
  with_items:
    - innodb_index_stats
    - innodb_table_stats

- name: Modify InnoDB tables to MyISAM
  command: "mysql mysql -e 'ALTER TABLE {{ item }} ENGINE=MyISAM;'"
  with_items:
    - gtid_slave_pos
